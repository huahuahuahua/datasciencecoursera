showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
rm(list=ls())
library(swirl)
swirl()
str(mpg)
plot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, col=drv)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacture)
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv)
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom = "density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth("lm"))
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")+facet_grid(.~cut)
qplot(carat, price, data=diamonds, color=cut, facets = .~cut)+ geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq(0,1, length=4), na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price)
)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut
)
rm(list=ls())
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
abline(h=.05)
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx, cy)
which.min(disTmp, 2, which.min)
apply(disTmp, 2, which.min)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newcx, newcy, col=cols1, pch=8, cex=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmobj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3
)
kmeans(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%t(matv)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1<-(svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(image(a1))
myImage(a1)
a2<-svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2])
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
rm(list=ls())
library(swirl)
swirl()
dim(pm0)
head(pm0)
names
cnames
cnames<-strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative<-x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates), "%Y%m%d")
head(date())
head(dates)
hist(dates[negative], "month")
hist(dates[negative], "month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0, State.Code==36& county.site %in% both)
cnt1<-subset(pm1, State.Code==36& county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0, County.Code==63 & Site.ID == 2008)
pm1sub<-subset(cnt1, County.Code==63 & Site.ID == 2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date), "%Y%m%d")
mfrow=c(1,2)
par(mfrow =c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng<-range(x0sub, x1sub, na.rm=TRUE)
rng
mn0<-with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1<-with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0), mean=mno)
d0<-data.frame(state=names(mn0), mean=mn0)
d1<-data.frame(state=names(mn1), mean=mn1)
mrg(d0, d1, by = "state")
mrg<-merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52)), mrg[,3])
with(mrg, points(rep(2,52)), mrg[,3]))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
rm(list=ls())
getwd
getwd()
setwd(C:/Users/hua/Documents/sandbox/activity_monitoring)
setwd("C:/Users/hua/Documents/sandbox/activity_monitoring")
getwd()
?read.csv
head(data)
summary(data)
knitr::opts_chunk$set(echo = TRUE)
data<-read.csv("activity.csv", header = TRUE, sep = ",", na.strings = "NA", stringsAsFactors = FALSE)
head(data)
class(data$date)
class(data)
?date
data$datef<-as.Date(as.charater(date), "%Y%m%d")
data$datef<-as.Date(as.character(date), "%Y%m%d")
data$datef<-as.Date(date, "%Y%m%d")
data$datef<-as.Date("2012-10-01", "%Y%m%d")
data$datef<-as.Date(data$date, "%Y%m%d")
head(data)
data$datef<-as.Date(data$date, "YYYY-MM-DD")
head(data)
unique(data$date)
class(data$date)
as.Date("2012-11-21", "YYYY-MM-DD")
as.Date("2012-11-21")
x<-as.Date("2012-11-21")
class(x)
data$datef<-as.Date(data$date)
head(data)
class(data$datef)
stepday<-with(data, tapply(step, datef, sum, na.rm=T))
stepday<-with(data, tapply(steps, datef, sum, na.rm=T))
stepday
hist(stepday)
head(stepday)
?hist
stepday<-with(data, tapply(steps, date, sum, na.rm=T))
head(stepday)
hist(stepday)
barplot(stepday)
hist(stepday)
summary(data)
with(data, tapply(steps, datef, mean, na.rm=TRUE))
data$steps[datef=="2012-10-01"]
data$steps[data$datef=="2012-10-01"]
data$steps[data$datef=="2012-10-02"]
data$steps[data$datef=="2012-10-03"]
mean(data$steps[data$datef=="2012-10-02"])
mean(data$steps[data$datef=="2012-10-03"])
median(data$steps[data$datef=="2012-10-02"])
median(data$steps[data$datef=="2012-10-03"])
median(data$steps[data$datef=="2012-10-04"])
median(data$steps[data$datef=="2012-10-05"])
median(data$steps[data$datef=="2012-10-06"])
median(data$steps[data$datef=="2012-10-07"])
median(data$steps[data$datef=="2012-10-08"])
data$steps[data$datef=="2012-10-08"]
with(data, tapply(steps, datef, median, na.rm=TRUE))
with(data, tapply(steps, datef, average, na.rm=TRUE))
with(data, tapply(steps, datef, ave, na.rm=TRUE))
mean(sum(data$steps, na.rm = TRUE))
sum(data$steps, na.rm = TRUE)
mean(sum(data$steps, na.rm = TRUE))
mean(data$steps, na.rm = TRUE)
?plot
with(data, plot(interval, mean(steps, na.rm=TRUE), type = 'l'))
with(data, plot(interval, mean(steps, na.rm=TRUE), type = 'l', xlab = "5-minute interval", ylab = "average number of steps taken"))
head(data)
with(data, tapply(steps, interval, mean, na.rm=TRUE))
stepinterval<-with(data, tapply(steps, interval, mean, na.rm=TRUE))
head(stepinterval)
plot(stepinterval)
plot(stepinterval, type = 'l', xlab = "5-minute interval", ylab = "average number of steps taken"))
plot(stepinterval, type = 'l', xlab = "5-minute interval", ylab = "average number of steps taken")
max(stepinterval, na.rm=T)
class(stepinterval)
which.max(stepinterval, na.rm=T)
which.max(stepinterval)
which(stepinterval == max(stepinterval))
max(stepinterval)
which(stepinterval == max(stepinterval), arr.ind = T)
stepinterval(arrayInd(104))
stepinterval(arrayInd(835))
stepinterval(835)
stepinterval(arr.ind==835)
?array
which(stepinterval == max(stepinterval))
?which
stepinterval
unique(stepinterval)
sum(data$steps="NA")
sum(data$steps=="NA")
sum(data$steps[data$steps=="NA"])
data$steps[data$steps=="NA"]
summary(data)
summary(data$steps=="NA")
str(data$steps=="NA")
stepna<-subset(data, data$steps=="NA")
head(data)
stepna<-subset(data, data$steps==NA)
stepna
str(data)
stepna<-subset(data, as.character(data$steps)=="NA")
data[date=="2012-10-01", interval==0]
data[date=="2012-10-01" and interval==0]
data[date=="2012-10-01" & interval==0]
data[date=="2012-10-01" || interval==0]
data[date=="2012-10-01"]
data[datef=="2012-10-01"]
data[data$datef=="2012-10-01"]
data[data$interval==0]
unique(data$steps)
stepna<-subset(data, is.na(data$steps) == TRUE)
test<-intersect(data, stepna)
str(stepna)
str(data)
data == stepna
test<-data[stepna]
test<-data(stepna)
is.na(data$steps) == TRUE
test<-data
test$steps[is.na(test$steps) == TRUE]<-stepinterval$steps
test$steps[is.na(test$steps) == TRUE]
?intersect
?replace
data$steps[data$steps %in% stepna$steps]
data %in% stepna
test(stepna)
test2<-is.na(data)
test(test2)
test[test2]
data.frame(stepinterval)
stepintervalf<-data.frame(stepinterval)
View(stepintervalf)
stepintervalf<-data.frame(with(data, tapply(steps, interval, mean, na.rm=TRUE)))
View(stepintervalf)
rm(stepintervalf)
stepintervalf<-data.frame(with(data, tapply(steps, interval, mean, na.rm=TRUE)))
View(stepintervalf)
stepintervalf<-data.frame(stepinterval, keep.rownames=TRUE)
View(stepintervalf)
stepintervalf<-data.table(stepinterval, keep.rownames=TRUE)
library(data.table)
stepintervalf<-data.table(stepinterval, keep.rownames=TRUE)
View(stepintervalf)
setDT(stepinterval, keep.rownames = TRUE)
stepintervalf<-as.data.frame.table(stepinterval)
View(stepintervalf)
names(stepintervalf)<-c("interval", "mean")
for (i in 1:nrow(test)) {
if (is.na(test$steps[i]))  {
test$steps[i] = stepintervalf[which(test$interval[i]==stepintervalf$interval), ]$mean
}
}
is.na(test)
test[is.na(test)==TRUE]
summary(test)
summary(data$steps=="NA")
stepintervalf<-as.data.frame.table(stepinterval)
names(stepintervalf)<-c("interval", "mean")
newdata<-data
for (i in 1:nrow(newdata)) {
if (is.na(newdata$steps[i]))  {
newdata$steps[i] = stepintervalf[which(newdata$interval[i]==stepintervalf$interval), ]$mean
}
}
View(newdata)
newstepday<-with(newdata, tapply(steps, datef, sum, na.rm=TRUE))
hist(newstepday)
with(newdata, tapply(steps, datef, mean, na.rm=TRUE))
with(newdata, tapply(steps, datef, median, na.rm=TRUE))
stepday
mean(stepday)
median(stepday)
mean(newstepday)
median(newstepday)
newstepday
stepday[dataf=="2012-10-01"]
stepday[datef=="2012-10-01"]
data[datef=="2012-10-01"]
data[data$datef=="2012-10-01"]
data$steps[data$datef=="2012-10-01"]
newdata$steps[newdata$datef=="2012-10-01"]
weekdays("2012-10-01")
weekdays(as.date("2012-10-01")
)
weekdays(as.Date("2012-10-01")
)
weekdays(unique(newdata$datef)
)
for (j in 1:nrows(test)) {
if (weekdays(test$datef[j]) %in% c("Monday",   "Tuesday",   "Wednesday", "Thursday",  "Friday")) {
test$day <- as.factor("weekday")
}
test$day <- as.factor("weekend")
}
for (j in 1:nrow(test)) {
if (weekdays(test$datef[j]) %in% c("Monday",   "Tuesday",   "Wednesday", "Thursday",  "Friday")) {
test$day <- as.factor("weekday")
}
test$day <- as.factor("weekend")
}
View(test)
unique(test$day)
weekdays(newdata$datef[1])
weekdays(newdata$datef[2])
weekdays(newdata$datef[20])
weekdays(newdata$datef[200])
weekdays(newdata$datef[2000])
?%in%
? in
?in
? %
for (j in 1:nrow(test)) {
if (weekdays(test$datef[j]) %in% c("Monday",   "Tuesday",   "Wednesday", "Thursday",  "Friday")) {
test$day <- as.factor("weekday")
}
else
test$day <- as.factor("weekend")
}
unique(test$day)
nrow(newdata)
for (j in 1:nrow(test)) {
if (weekdays(test$datef[j]) %in% c("Monday",   "Tuesday",   "Wednesday", "Thursday",  "Friday")) {
test$day <- as.factor("weekday")
else
test$day <- as.factor("weekend")
}
}
for (j in 1:nrow(test)) {
if (weekdays(test$datef[j]) %in% c("Monday",   "Tuesday",   "Wednesday", "Thursday",  "Friday")) {
test$day[j] <- as.factor("weekday")
else
test$day[j] <- as.factor("weekend")
}
}
for (j in 1:nrow(test)) {
if (weekdays(test$datef[j]) %in% c("Monday",   "Tuesday",   "Wednesday", "Thursday",  "Friday")) {
test$day[j] <- as.factor("weekday")}
else
test$day[j] <- as.factor("weekend")
}
warnings()
unique(test$day)
class(test$day)
test<-test[,-1]
head(test)
test<-newdata
head(test)
test$day<-ifelse(weekdays(test$datef) == "Saturday" | weekdays(test$datef) == "Sunday", "Weekend", "Weekday")
unique(test$day)
class(test$day)
test$day <- factor(test$day)
class(test$day)
newstepinterval<-with(newdata, tapply(steps, interval, mean, na.rm=TRUE))
newdata$day<-ifelse(weekdays(newdata$datef) == "Saturday" | weekdays(newdata$datef) == "Sunday", "Weekend", "Weekday")
newdata$day <- factor(newdata$day)
newstepinterval<-with(newdata, tapply(steps, interval, mean, na.rm=TRUE))
plot(newstepinterval|day)
plot(newstepinterval)
plot(newstepinterval, type = 'l', xlab = "5-minute interval", ylab = "average number of steps taken")
?plot
newstepinterval<-with(newdata, tapply(steps, interval&day, mean, na.rm=TRUE))
newstepinterval<-with(newdata, tapply(steps, interval, mean, na.rm=TRUE))
?aggregate
newstepinterval<-aggregate(steps ~ interval + day, data = newdata, mean)
View(newstepinterval)
?ggplot
?xyplot
?plot
?qplot
library(ggplot2)
?ggplot
ggplot(newstepinterval, aes(interval, steps))+geom_line()+facet_grid(day) +xlab("5-minute interval")+ylab("average number of steps taken")
head(newstepinterval)
ggplot(newstepinterval, aes(interval, steps))+geom_line()+facet_grid(day~.) +xlab("5-minute interval")+ylab("average number of steps taken")
